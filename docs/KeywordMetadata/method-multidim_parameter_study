Blurb::
Samples variables on full factorial grid of study points

Description::
Dakota's multidimensional parameter study computes response data sets
for an n-dimensional grid of points. Each continuous and discrete
range variable is partitioned into equally spaced intervals between
its upper and lower bounds, each discrete set variable is partitioned
into equally spaced index intervals. The partition boundaries in 
n-dimensional space define a grid of points, and every point is 
evaluated.

<b> Default Behavior </b>

By default, the multidimensional parameter study operates over all
types of variables.

<b> Expected Outputs </b>

A multidimensional parameter study produces a set of responses for
each parameter set that is generated.

<b> Expected HDF5 Output </b>

If Dakota was built with HDF5 support and run with the 
\ref environment-results_output-hdf5 keyword, this method
writes the following results to HDF5:

- \ref hdf5_results-pstudies
- \ref hdf5_results-correlations

<b> Usage Tips </b>

Since the initial values from the variables specification will not be
used, they need not be specified.

Topics::	parameter_studies
Examples::
This example is taken from the Users Manual and is a good comparison to the examples on
\ref method-centered_parameter_study and \ref method-vector_parameter_study.
\verbatim
# tested on Dakota 6.0 on 140501
environment
  tabular_data
    tabular_data_file = 'rosen_multidim.dat'

method
  multidim_parameter_study
    partitions = 10 8

model
  single

variables
  continuous_design = 2
    lower_bounds     -2.0     -2.0
    upper_bounds      2.0      2.0
    descriptors       'x1'     "x2"

interface
  analysis_driver = 'rosenbrock'
    fork

responses
  response_functions = 1
  no_gradients
  no_hessians

\endverbatim

This example illustrates the full factorial combinations of parameter values created
by the multidim_parameter_study. With 10 and 8 partitions, there are actually
11 and 9 values for each variable. This means that \f$ 11 \times 9 = 99 \f$ 
function evaluations will be required.

Theory::
Faq::
See_Also::	method-centered_parameter_study, method-list_parameter_study, method-vector_parameter_study
