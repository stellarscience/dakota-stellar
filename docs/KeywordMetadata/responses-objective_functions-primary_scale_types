Blurb::
How to scale each objective function

Description::
Each string in \c primary_scale_types indicates the scaling type for
each objective function. They only have effect when the associated
method specifies \c scaling.

The options are:

\li <tt>'value'</tt> - characteristic value by which response
    functions will be divided. If this is chosen, then \ref
    responses-objective_functions-primary_scales must also be
    specified; 'value' is assumed if scales are given without \c
    scale_types

\li <tt>'log'</tt> - logarithmic scaling (can be used together with
    \ref responses-objective_functions-primary_scales, which can be
    helpfully used to negate values prior to log transformation)

(Automatic scaling is disallowed due to lack of bounds or targets for
primary responses.)

If a single string is specified it will apply to all
objective_functions. Otherwise the length of \c primary_scale_types
must have length equal to \ref responses-objective_functions. Thus,
when scalar and/or field responses are specified, the number of \c
primary_scale_types must equal the number of scalars plus the number
of fields, \e not the total elements in the fields.

<b>Usage Tips:</b>

When scaling is active, it is applied to objective functions prior to
any \ref responses-objective_functions-weights and multi-objective sum
formation.

See the scaling information under specific methods, e.g.,
\c method-*-scaling for details on how to use this keyword.

Topics::	
Examples::
Theory::
Faq::
See_Also::
