Blurb::
Activate adaptive procedure for determining best rank representation

Description::
The adaptive algorithm proceeds as follows:
-# Start from rank \c start_rank and form an approximation
-# Adapt the current approximation by searching for a solution with lower rank that achieves L2 accuracy within epsilon tolerance of the reference.
-# If a lower rank solution is found with comparable accuracy, then stop.  If not, increase the rank by an amount specified by \c kick_rank.
-# Return to step 2 and continue until either \c max_rank is reached or a converged rank (rank less than current reference with comparable accuracy) is found.

<b> Default Behavior </b>

No cross validation for rank.

Examples::
This example shows specification of a rank adaptation starting at rank 2,
incrementing by 2, and limited at rank 10.
\verbatim
model,
	id_model = 'FT'
	surrogate global function_train
	  start_order = 5
	  adapt_rank  start_rank = 2  kick_rank = 2  max_rank = 10
	  solver_tolerance   = 1e-12
	  rounding_tolerance = 1e-12
	dace_method_pointer = 'SAMPLING'
\endverbatim

Note that \c adapt_rank and \c adapt_order can either be combined or
used separately.

See_Also::	model-surrogate-global-function_train-start_rank, model-surrogate-global-function_train-kick_rank, model-surrogate-global-function_train-max_rank
