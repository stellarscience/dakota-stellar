#@ s*: Label=FastTest
#@ s4: DakotaConfig=HAVE_NPSOL
#@ s5: DakotaConfig=HAVE_NPSOL
#@ s4: UserMan=cylhead_opt_npsol
#@ s5: UserMan=cantilever_opt_npsol
#@ [taxonomy:start]
#@ s4-5: [analysis:Optimization]
#@ s4-5: [method:SQP]
#@ s4-5: [goal:Local]
#@ s4-5: [goal:BoundAndNonLinearConstraints]
#@ s4-5: [variable:Continuous]
#@ s4-5: [model:Smooth]
#@ s4-5: [model:EstimatedFirstDerivatives]
#@ [taxonomy:end]

# Tests from the Additional Examples chapter in the DAKOTA Users Manual
## Dakota Input File: cylhead_opt_npsol.in    #s4
## Dakota Input File: cantilever_opt_npsol.in #s5

method
  optpp_q_newton                              #s0,#s2
#  optpp_g_newton                             #s1,#s3
    convergence_tolerance = 1e-10	            #s0,#s1,#s2,#s3
## (NPSOL requires a software license; if not available, try	      #s4,#s5
## conmin_mfd or optpp_q_newton instead)     			      #s4,#s5
#  npsol_sqp				                          #s4,#s5
#    convergence_tolerance = 1.e-8	          #s4,#s5

variables
  continuous_design = 2
    initial_point -1.2   1.0                  #s0,#s1
#    initial_point  0.8   0.7		      #s2,#s3
    lower_bounds  -2.0  -2.0		      #s0,#s1,#s2,#s3
    upper_bounds   2.0   2.0		      #s0,#s1,#s2,#s3
    descriptors    'x1'  'x2'		      #s0,#s1,#s2,#s3
#    initial_point  1.8   1.0		      #s4
#    upper_bounds   2.164 4.0  		      #s4
#    lower_bounds   1.5   0.0 		      #s4
#    descriptors 'intake_dia' 'flatness'      #s4
#    initial_point  4.0   4.0		      #s5
#    upper_bounds  10.0  10.0  		      #s5
#    lower_bounds   1.0   1.0  		      #s5
#    descriptors    'w'   't'  		      #s5
#  continuous_state = 4			      #s5
#    initial_state  40000. 29.E+6 500. 1000.  #s5
#    descriptors      'R'   'E'   'X'   'Y'   #s5

interface
  analysis_drivers = 'rosenbrock'             #s0,#s1,#s2,#s3
    fork                                      #s0,#s1,#s2,#s3
#  analysis_drivers = 'cyl_head'		          #s4
#    fork asynchronous                        #s4
#  analysis_drivers = 'cantilever'		        #s5
#    fork                                     #s5
#  asynchronous evaluation_concurrency = 2	  #s5

responses
  objective_functions = 1                     #s0,#s2,#s4,#s5
#  calibration_terms = 2		                  #s1,#s3
#  nonlinear_inequality_constraints = 3	      #s4
#  nonlinear_inequality_constraints = 2	      #s5
#  numerical_gradients		    	              #s4,#s5
#    method_source dakota		                  #s4,#s5
#    interval_type central		                #s4
#    interval_type forward		                #s5
#    fd_step_size = 1.e-4	                    #s4,#s5
  analytic_gradients                          #s0,#s1,#s2,#s3
  no_hessians
