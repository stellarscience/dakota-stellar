#@ s*: Label=FastTest
#@ p*: Label=FastTest
#@ p0: MPIProcs=2
#@ p1: MPIProcs=3
#@ s*: TimeoutAbsolute=3600
#@ s*: TimeoutDelay=1200

#environment,

method,
	model_pointer = 'HIERARCH'
        multilevel_sampling	 #s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s9,#p0,#p1
# Ensure MFMC can also work across resolution levels:
#	multifidelity_sampling				#s10
#	  sample_type lhs				#s3,#s4,#s5
	  pilot_samples = 20	#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s10,#p0,#p1
	  seed = 1237		#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s10,#p0,#p1
#	  pilot_samples = 100 50 40 30 20		#s9
#	  seed_sequence = 1234 2345 3456 4567 5678	#s9
	  max_iterations = 5   	    	#s0,#s1,#s2,#s3,#s4,#s5,#s9,#s10,#p0,#p1
#	  max_iterations = 10		#s6,#s7,#s8
	  allocation_target = mean	#s0,#s1,#s2,#s3,#s4,#s5,#s9,#p0,#p1
#	  allocation_target = variance	#s6,#s7,#s8
#	    optimization 
	  qoi_aggregation = sum	 #s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s9,#p0,#p1
	  convergence_tolerance = .1			#s0,#s3,#s6,#p0,#p1
#	  convergence_tolerance = .01			#s1,#s4,#s7,#s9,#s10
#	  convergence_tolerance = .001			#s2,#s5,#s8
#	  convergence_tolerance_type = relative		#s0,#s6,#s2,#s7
	output silent

model,
	id_model = 'HIERARCH'
	surrogate hierarchical
	  ordered_model_fidelities = 'SIM1'

model,
	id_model = 'SIM1'
	simulation
	  solution_level_control = 'mesh_size'
# dense matrices --> direct solvers --> cubic growth in expense
	  solution_level_cost = 1. 8. 64. 512. 4096.

variables,
	uniform_uncertain = 9	 # number of cosine terms in soln expansion
	  lower_bounds      =  9*-1.
	  upper_bounds      =  9* 1.
	discrete_state_set
	  integer = 1 # even poly degree for odd mesh pts including boundary
      	  set_values = 4 8 16 32 64
      	  descriptors = 'mesh_size'
    	real = 4
      	  elements_per_variable = 2 2 1 1
      	  set_values = 0.1 1 # field mean
                       0.5 4 # field std dev
                       1     # kernel order
                       0.2   # kernel length
      	  descriptors = 'field_mean' 'field_std_dev' 'kernel_order' 'kernel_length'
      	  initial_state = 1 4 1 0.2
	string = 2  # form of kernel (refer to Yang,Lei,Baker,Lin)
      	  elements_per_variable = 2 2
	  initial_state = 'cosine' 'off'
      	  set_values = 'cosine' 'exponential'
                       'off' 'on'
      	  descriptors = 'kernel_type' 'positivity'

interface,
	direct
	  analysis_driver = 'steady_state_diffusion_1d'

responses,
	response_functions = 3	 # number of soln pts excl. +/-5% (symmetric)
	no_gradients
	no_hessians
