#@ On Windows: workdir issue?
#@ *: DakotaConfig=UNIX
#@ s0: TimeoutAbsolute=1800

# DAKOTA Input File: dakota_uq_timeseries_ivp_optinterf.in
# Mixed UQ with aleatory post-processing of optional interface simulation

environment,
	  method_pointer = 'EPISTEMIC'

#################################
# begin EPISTEMIC specification #
#################################
method,									 
        id_method = 'EPISTEMIC'
        model_pointer = 'EPIST_M'
	global_interval_est
	  ego						#s0
#	  lhs						#s1
	  samples = 100 seed = 1234567 
	  output verbose

model,
        id_model = 'EPIST_M'
        nested
          variables_pointer  = 'EPIST_V'
	  optional_interface_pointer  = 'OPTIONAL_I'
	  optional_interface_responses_pointer = 'OPTIONAL_I_R'
          sub_method_pointer = 'ALEATORY'
          responses_pointer  = 'EPIST_R'
          primary_response_mapping   = 0. 0. 1.
	hierarchical_tagging

variables,
        id_variables = 'EPIST_V'
        continuous_interval_uncertain = 8
#	  num_intervals   = 8*1
#         interval_probs  = 8*1.0
# coefficients for cubic polynomial trajectories with time:
#                           const       linear      quad        cubic
      	  lower_bounds    = 10.   0.1   10.   0.1  -0.2   5.   -0.03  0.05
	  upper_bounds    = 20.   0.2   15.   0.3  -0.1   8.   -0.01  0.10
	  descriptors     = 'E1'  'E2'  'E3'  'E4'  'E5'  'E6'  'E7'  'E8'

responses,
        id_responses = 'EPIST_R'
        response_functions = 1
        response_descriptors = 'PLOAS'
        no_gradients
        no_hessians
  
##########################################
# begin optional interface specification #
##########################################
interface,
	id_interface = 'OPTIONAL_I'
# make this part synchronous
	fork
	  analysis_driver = 'trajectory'
	  work_directory named 'epistemic_simulation'
# Note: file tagging affects the directory tag that's employed
	  directory_tag directory_save   #file_tag file_save
	  parameters_file = 'epist_params.in'
	  results_file    = 'epist_results.out'

responses,
	id_responses = 'OPTIONAL_I_R'
	response_functions = 0 # No response contribution; just a sim driver
	no_gradients
	no_hessians

################################
# begin ALEATORY specification #
################################
method,
        id_method = 'ALEATORY'
        model_pointer = 'ALEAT_M'
	polynomial_chaos
	  askey non_nested
	  sparse_grid_level = 3
          response_levels = 0.0
          compute probabilities
	  samples_on_emulator = 10000 seed = 12347 fixed_seed
          cumulative distribution

model,
        id_model = 'ALEAT_M'
        single
          variables_pointer = 'ALEAT_V'
          interface_pointer = 'ALEAT_I'
          responses_pointer = 'ALEAT_R'
# files not named, so reliant on content inside parameters files

variables,
        id_variables = 'ALEAT_V'
# inactive variables passed from outer epistemic loop (placeholder spec)
        continuous_interval_uncertain = 8
      	  lower_bounds    = 10.   0.1   10.   0.1  -0.2   5.   -0.03  0.05
	  upper_bounds    = 20.   0.2   15.   0.3  -0.1   8.   -0.01  0.10
# active variables on inner aleatory loop
	normal_uncertain = 2
	  means          =   80.0   300.0
	  std_deviations =   20.0    75.0
	  descriptors    = 'FailThresh1' 'FailThresh2'

interface,
	id_interface = 'ALEAT_I'
# this part may execute asynchronously
	fork asynchronous evaluation_concurrency = 6
	  analysis_driver = 'trajectory_post'
	  work_directory named 'aleatory_processing'
# Note: file tagging affects the directory tag that's employed
	  directory_tag directory_save file_save
	  parameters_file = 'aleat_params.in'
	  results_file    = 'aleat_results.out'
	deactivate evaluation_cache

responses,
        id_responses = 'ALEAT_R'
        response_functions = 1
        response_descriptors = 'DeltaTime'
        no_gradients
        no_hessians

