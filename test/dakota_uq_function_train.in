#@ *: DakotaConfig=HAVE_C3

environment,
	#output_precision = 16

method,
# These cases exercise FT as a method (like PCE/SC):
	function_train_uq				#s0,#s1,#s2,#s3
	  convergence_tol = 1e-6			#s0,#s1,#s2,#s3
#      	  build_samples = 100 (defined by DACE spec)
#      	  import_build_points_file = "rosenbrock_samples.dat"
	  samples_on_emulator = 100000			#s0,#s1,#s2,#s3
	  variance_based_decomp #interaction_order = 1	#s0,#s1,#s2,#s3
# These cases perform generic UQ on FT as a model:
#	sampling					#s4,#s5,#s6,#s7
#	  samples = 100000  sample_type lhs		#s4,#s5,#s6,#s7
	  seed = 531
	  response_levels = .1 1. 50. 100. 500. 1000.
	model_pointer = 'FT'

model,
	id_model = 'FT'
	surrogate global function_train
	  max_order = 5
	  start_rank = 2  kick_rank = 2  max_rank = 10
	  adapt_rank
	  solver_tolerance   = 1e-12
	  rounding_tolerance = 1e-12
#	  verbosity = 0
	dace_method_pointer = 'SAMPLING'

method
	id_method = 'SAMPLING'
	sampling
	  samples = 100  seed = 531  sample_type lhs
	model_pointer = 'SIM'

model,
	id_model = 'SIM'
	single
          interface_pointer = 'I1'
          variables_pointer = 'V1'
          responses_pointer = 'R1'

variables,
	id_variables = 'V1'
	normal_uncertain = 2		#s0,#s1,#s4,#s5
	  means          =  0.   0.	#s0,#s4
	  std_deviations =  1.   1.	#s0,#s4
#	  means          =  2.   3.	#s1,#s5
#	  std_deviations =  3.   2.	#s1,#s5
#	uniform_uncertain = 2	 	#s2,#s3,#s6,#s7
#	  lower_bounds = -1. -1. 	#s2,#s6
#	  upper_bounds =  1.  1.	#s2,#s6
#	  lower_bounds = -3. -2.	#s3,#s7
#	  upper_bounds =  2.  3.	#s3,#s7
	descriptors  = 'x1' 'x2'

interface,
	id_interface = 'I1'
	direct
	analysis_driver = 'rosenbrock'

responses,
	id_responses = 'R1'
	response_functions = 1
	no_gradients
	no_hessians
