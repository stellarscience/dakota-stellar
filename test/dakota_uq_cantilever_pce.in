method,
	polynomial_chaos
 	  expansion_order   = 4
	  collocation_ratio = 2
#	  use_derivatives				#s2,#s3
#         probability_refinement import                 #s4
	  samples_on_emulator = 10000 seed = 1234567 
	  num_response_levels = 0 11 11
	  response_levels =
	0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
	0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
	  num_probability_levels = 0 11 11
	  probability_levels =
	1.1781223736e-03 1.0140642250e-02 5.2949484412e-02
	1.7616121376e-01 3.9671123925e-01 6.5056238575e-01
	8.4502957725e-01 9.4772602285e-01 9.8645187403e-01
	9.9724902938e-01 9.9955171208e-01
	2.4239392063e-06 4.3299260280e-05 5.0259027330e-04
	3.8646724666e-03 2.0168889215e-02 7.3551406291e-02
	1.9402090381e-01 3.8555575073e-01 6.0503820154e-01
	7.9058284725e-01 9.0905085582e-01
	  cumulative distribution
	  variance_based_decomp #interaction_order = 1

variables,
#	active all					#s1,#s3
	continuous_design = 2
	  initial_point    2.5    2.5
	  upper_bounds    10.0   10.0
	  lower_bounds     1.0    1.0
	  descriptors 'w' 't'
	normal_uncertain = 4
	  means             =  40000. 29.E+6 500. 1000.
	  std_deviations    =  2000. 1.45E+6 100. 100.
	  descriptors       =  'R' 'E' 'X' 'Y'

interface,
	direct
	  analysis_driver = 'cantilever'

responses,
	response_functions = 3
	no_gradients					#s0,#s1,#s4
#	analytic_gradients				#s2,#s3
	no_hessians
