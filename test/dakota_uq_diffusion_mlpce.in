#@ s*: Label=FastTest
#@ p0: MPIProcs=2
#@ p1: MPIProcs=3
#@ s*: TimeoutAbsolute=1200
#@ s*: TimeoutDelay=3600

environment,
	output_precision = 16

method,
	model_pointer = 'HIERARCH'
        multilevel_polynomial_chaos
# exp order is initial for pilot and is adapted based on collocation ratio
	  expansion_order_sequence = 2	     	#s0,#s1,#s2,#s3,#s4,#p0,#p1
	  pilot_samples = 10  			#s0,#s1,#s2,#s3,#s4,#p0,#p1
#	  expansion_order_sequence = 1	     		#s5
#	  pilot_samples = 300 150 75 25 7   		#s5
	  collocation_ratio = .9
#	  estimator_rate = 2.5
	  seed = 1237
	  orthogonal_matching_pursuit
#	  max_iterations = 5
	  convergence_tolerance = .1			#s0,#p0,#p1
#	  convergence_tolerance = .01			#s1,#s3,#s5
#	  convergence_tolerance = .001			#s2,#s4
#	  convergence_tolerance = .0001
#	  discrepancy_emulation recursive		#s3,#s4
	output silent

model,
	id_model = 'HIERARCH'
	surrogate hierarchical
	  ordered_model_fidelities = 'SIM1'
	  correction additive zeroth_order

model,
	id_model = 'SIM1'
	simulation
	  solution_level_control = 'mesh_size'
# dense matrices --> direct solvers --> cubic growth in expense
	  solution_level_cost = 1. 8. 64. 512. 4096.

variables,
	uniform_uncertain = 9	 # number of cosine terms in soln expansion
	  lower_bounds      =  9*-1.
	  upper_bounds      =  9* 1.
	discrete_state_set
	  integer = 1 # even poly degree for odd mesh pts including boundary
      	  set_values = 4 8 16 32 64
      	  descriptors = 'mesh_size'
    	real = 4
      	  elements_per_variable = 2 2 1 1
      	  set_values = 0.1 1 # field mean
                       0.5 4 # field std dev
                       1     # kernel order
                       0.2   # kernel length
      	  descriptors = 'field_mean' 'field_std_dev' 'kernel_order' 'kernel_length'
      	  initial_state = 1 4 1 0.2
	string = 2  # form of kernel (refer to Yang,Lei,Baker,Lin)
      	  elements_per_variable = 2 2
	  initial_state = 'cosine' 'off'
      	  set_values = 'cosine' 'exponential'
                       'off' 'on'
      	  descriptors = 'kernel_type' 'positivity'

interface,
	direct
	  analysis_driver = 'steady_state_diffusion_1d'

responses,
	response_functions = 3	 # number of soln pts excl. +/-5% (symmetric)
	no_gradients
	no_hessians
