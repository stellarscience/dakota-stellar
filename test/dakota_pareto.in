#@ s*: Label=FastTest
#@ *: DakotaConfig=HAVE_DOT
#@ s0: UserMan=textbook_pareto_strat
#@ [taxonomy:start]
#@ s0: [analysis:Optimization]
#@ s0: [method:Newton]
#@ s0: [goal:Local]
#@ s0: [goal:BoundConstraints]
#@ s0: [variable:Continuous]
#@ s0: [model:Smooth]
#@ s0: [model:FirstDerivatives]
#@ [taxonomy:end]

# DAKOTA INPUT FILE - dakota_pareto.in
# Dakota Input File: textbook_pareto_strat.in	#s0

# Demonstrates the use of the Pareto set optimization environment.
# The different Pareto optima define a 3-D trade-off surface.

environment
  top_method_pointer = 'PS'

method
  id_method = 'PS'
  pareto_set
#    iterator_servers = 3
    method_pointer = 'NLP'                #s0,#s1
#    method_pointer = 'SBLO'	            #s2
#    random_weight_sets = 5 seed = 123	  #s1
    weight_sets = 	                      #s0,#s2
      1.0    0.0    0.0			              #s0,#s2
      0.0    1.0    0.0			              #s0,#s2
      0.0    0.0    1.0			              #s0,#s2
      0.333  0.333  0.333	                #s0,#s2

#method,                                  #s2
#  id_method = 'SBLO'			                #s2
#  surrogate_based_local		              #s2
#    model_pointer = 'SURROGATE'		        #s2
#    approx_method_pointer = 'NLP'	      #s2
#    trust_region initial_size = .4	      #s2

method
  id_method = 'NLP'
## (DOT requires a software license; if not available, try	      #s0
## conmin_mfd or optpp_q_newton instead)     			      #s0
  dot_bfgs
#          convergence_tolerance = 1e-8   #s2

#method,				                          #s2
#  id_method = 'SAMPLING'		              #s2
#  sampling                               #s2
#    model_pointer = 'TRUTH'		            #s2
#    seed = 531				                    #s2
#    sample_type lhs			                #s2

#model,					                          #s2
#  id_model = 'SURROGATE'		              #s2
#  surrogate global			                  #s2
#    dace_method_pointer = 'SAMPLING'	    #s2
#    polynomial quadratic		              #s2

model
#  id_model = 'TRUTH'                     #s2
  single

variables
  continuous_design = 2
    initial_point     0.9    1.1
    upper_bounds      5.8    2.9
    lower_bounds      0.5   -2.9
    descriptors       'x1'   'x2'

interface
  analysis_drivers = 'text_book'
    direct

responses
  objective_functions = 3
  analytic_gradients
  no_hessians
