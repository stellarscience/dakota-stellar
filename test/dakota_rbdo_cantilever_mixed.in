#@ s*: Label=FastTest
#@ TODO REVIEW: Do the reliability methods also need NPSOL?
#@ *: DakotaConfig=HAVE_DOT
# DAKOTA Input File: dakota_rbdo_cantilever_mixed.in
# RBDO with mixed insertion/augmentation using the cantilever test function.

# Verifies analytic vs. numerical distribution parameter gradients
# for RIA and PMA RBDO

environment,
	  method_pointer = 'OPTIM'

###########################
# begin opt specification #
###########################
method,
	id_method = 'OPTIM'
	model_pointer = 'OPTIM_M'
	dot_sqp
#	npsol_sqp
	  convergence_tolerance = 1.e-6
	scaling

model,
	id_model = 'OPTIM_M'
	nested
	  variables_pointer  = 'OPTIM_V'
	  sub_method_pointer = 'UQ'
	  responses_pointer  = 'OPTIM_R'
	  primary_variable_mapping   = '' '' 'X'    'Y'
	  secondary_variable_mapping = '' '' 'mean' 'mean'
	  primary_response_mapping   = 1. 0. 0. 0. 0. 0. 0. 0.
	  secondary_response_mapping = 0. 0. 0. 0. 1. 0. 0. 0.
				       0. 0. 0. 0. 0. 0. 0. 1.

variables,
	id_variables = 'OPTIM_V'
	continuous_design = 4
	  initial_point    2.5    2.5    500.  1000.
	  lower_bounds       1.     1.   200.   200.
	  upper_bounds      10.    10.  2000.  2000.
	  descriptors 'w' 't' 'X_mean' 'Y_mean'
	scale_type = 'auto'

responses,
# minimize mean Weight
# s.t.     beta_S/D >= 3
#
# NOTE: This specifies the TOTAL RESPONSE for the optimization,
#       which is a combination of nested & interface responses.
	id_responses = 'OPTIM_R'
	objective_functions = 1
	nonlinear_inequality_constraints = 2
	nonlinear_inequality_lower_bounds = 3. 3.	  	#s0,#s1
	nonlinear_inequality_upper_bounds = 1.e+50 1.e+50 	#s0,#s1
#	analytic_gradients					#s1,#s3
	numerical_gradients					#s0,#s2
	  method_source dakota					#s0,#s2
	  interval_type central					#s0,#s2
	  fd_gradient_step_size = 1.e-3				#s0,#s2
	no_hessians

##########################
# begin UQ specification #
##########################
method,
	id_method = 'UQ'
	model_pointer = 'UQ_M'
	local_reliability
	  mpp_search no_approx
	  num_response_levels = 0 1 1		#s0,#s1
	  response_levels = 0.0 0.0		#s0,#s1
	  compute reliabilities			#s0,#s1
#	  num_reliability_levels = 0 1 1	#s2,#s3
#	  reliability_levels = 3. 3.		#s2,#s3
	  complementary distribution

model,
	id_model = 'UQ_M'
	single
	  variables_pointer = 'UQ_V'
	  interface_pointer = 'UQ_I'
	  responses_pointer = 'UQ_R'

variables,
	id_variables = 'UQ_V'
	continuous_design = 2
	normal_uncertain = 4
	  means             =  40000. 29.E+6 500. 1000.
	  std_deviations    =  2000. 1.45E+6 100. 100.
	  descriptors       =  'R' 'E' 'X' 'Y'

interface,
	id_interface = 'UQ_I'
	direct
	  analysis_driver = 'cantilever'
	  deactivate evaluation_cache restart_file

responses,
	id_responses = 'UQ_R'
	response_functions = 3
	analytic_gradients
	no_hessians
