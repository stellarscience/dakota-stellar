#@ s*: Label=FastTest
#@ TODO REVIEW: Do the reliability methods also need NPSOL?
#@ *: DakotaConfig=HAVE_DOT
# DAKOTA Input File: dakota_rbdo_steel_column.in
# RBDO with variable insertion using the steel_column test fn.

# Verifies analytic vs. numerical distribution parameter gradients
# for RIA and PMA RBDO

environment,
	  method_pointer = 'OPTIM'

###########################
# begin opt specification #
###########################
method,
	id_method = 'OPTIM'
	model_pointer = 'OPTIM_M'
	dot_sqp
#	npsol_sqp
	  convergence_tolerance = 1.e-6
	  output verbose
	scaling

model,
	id_model = 'OPTIM_M'
	nested
	  variables_pointer  = 'OPTIM_V'
	  sub_method_pointer = 'UQ'
	  optional_interface_pointer  = 'OPTIONAL_I'
	  optional_interface_responses_pointer = 'OPTIONAL_I_R'
	  responses_pointer  = 'OPTIM_R'
	  primary_variable_mapping   = 'B'    'D'    'H'
	  secondary_variable_mapping = 'mean' 'mean' 'mean'
	  primary_response_mapping   =  0.  0. -1.

variables,
	id_variables = 'OPTIM_V'
	continuous_design = 3
	  initial_point   300.     20.      300.
	  lower_bounds    200.     10.      100.
	  upper_bounds    400.     30.      500.
	  descriptors     'b'      'd'      'h'
	  scale_type = 'value'							#s0,#s1,#s2
	scales = 			300.		20.		300.	#s0,#s1,#s2

responses,
# maximize beta
# s.t.     Cost <= 4000.
#
# NOTE: This specifies the TOTAL RESPONSE for the optimization,
#       which is a combination of nested & interface responses.
	id_responses = 'OPTIM_R'
	objective_functions = 1
	nonlinear_inequality_constraints = 1
	nonlinear_inequality_upper_bounds = 4000.
#	analytic_gradients				#s1,#s3
	numerical_gradients				#s0,#s2
	  method_source dakota				#s0,#s2
	  interval_type central				#s0,#s2
	  fd_gradient_step_size = 1.e-3			#s0,#s2
	no_hessians

##########################################
# begin optional interface specification #
##########################################
interface,
	id_interface = 'OPTIONAL_I'
	direct
	  analysis_driver = 'steel_column_cost'

responses,
# NOTE: This is the response set from the optional interface.
	id_responses = 'OPTIONAL_I_R'
	objective_functions = 0
	nonlinear_inequality_constraints = 1
	analytic_gradients
	no_hessians

##########################
# begin UQ specification #
##########################
method,
	id_method = 'UQ'
	model_pointer = 'UQ_M'
	local_reliability nip
	  mpp_search no_approx
	  num_response_levels = 1		#s0,#s1
	  response_levels = 0.0			#s0,#s1
	  compute reliabilities			#s0,#s1
#	  num_reliability_levels = 1		#s2,#s3
#	  reliability_levels = 3.132		#s2,#s3
	  cumulative distribution

model,
	id_model = 'UQ_M'
	single
	  variables_pointer = 'UQ_V'
	  interface_pointer = 'UQ_I'
	  responses_pointer = 'UQ_R'

variables,
	id_variables = 'UQ_V'
	normal_uncertain = 2
	  means           =  30. 500000.
	  std_deviations  =  10.  50000.
	  descriptors     = 'F0'  'P1'
	lognormal_uncertain = 4
	  means          = 300.  20. 300. 400.
	  std_deviations =   3.   2.   5.  35.
	  descriptors    =  'B'  'D'  'H' 'Fs'
	gumbel_uncertain = 2
	  alphas         = 1.4250554e-5 1.4250554e-5
	  betas          = 559496.31    559496.31
	  descriptors    =  'P2'    'P3'
	weibull_uncertain = 1
	  alphas          =     5.7974
	  betas           =	22679.4777
	  descriptors     =    'E'

interface,
	id_interface = 'UQ_I'
	direct
	  analysis_driver = 'steel_column_perf'
	  deactivate evaluation_cache restart_file

responses,
	id_responses = 'UQ_R'
	response_functions = 1
	analytic_gradients
	no_hessians
