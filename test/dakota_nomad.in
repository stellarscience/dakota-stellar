#@ Cross-platform diffs in tests 10-16 carried until we can ensure that surrogates are working correctly with discrete variables
#@ *: Label=CarryDiff
#@ s1: TimeoutAbsolute=2100
#@ s5: TimeoutAbsolute=1800
# s18: test correct traits coverage

# DAKOTA INPUT FILE - dakota_nomad.in

environment,
#	tabular_data

method,
	mesh_adaptive_search
#	model_pointer = 'SURROGATE'				#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	use_surrogate optimize					#s10,#s11,#s12
#	use_surrogate inform_search				#s14,#s15,#s16
	seed = 1234
#	initial_delta = 2.0					#s1,#s9
#	variable_tolerance = 0.01					#s2,#s10
#       max_function_evaluations = 1000				#s5,#s14
#	max_iterations = 100					#s5,#s14
#	function_precision = 0.00000001				#s5,#s14
#	variable_neighborhood_search = 0.1			#s5,#s14
#	neighbor_order = 2	       				#s6,#s15
#	neighbor_order = 4	       				#s7,#s16
#	display_format = 'bbe obj'
#	display_all_evaluations	       				#s5,#s14
#	history_file = 'mads_history.log'			#s5,#s14

#model,								#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	id_model = 'SURROGATE'					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	surrogate global					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	  polynomial quadratic					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	  dace_method_pointer = 'SAMPLING'			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16

variables,
	continuous_design = 3					#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7
	  initial_point   -1.0    1.5   2.0			#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7
	  upper_bounds    10.0   10.0  10.0			#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7
	  lower_bounds   -10.0  -10.0 -10.0			#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7
	  descriptors      'x1'  'x2'  'x3'			#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7
#	continuous_design = 3					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s18
#	  initial_point   -1.0    1.5   2.0			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s18
#	  upper_bounds    10.0   10.0  10.0			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s18
#	  lower_bounds   -10.0  -10.0 -10.0			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s18
#	  descriptors      'x1'  'x2'  'x3'			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s18
#	continuous_design = 2					#s8,#s17
#	  initial_point     0.5 0.5				#s8,#s17
#	  lower_bounds      0.  0.				#s8,#s17
#	  upper_bounds      1.  1.				#s8,#s17
#	  descriptors =    'x' 'y'				#s8,#s17
#	discrete_design_range = 2				#s1,#s4,#s5,#s6,#s7
#	  initial_point      2     2				#s1,#s4,#s5,#s6,#s7
#	  lower_bounds       1     1				#s1,#s4,#s5,#s6,#s7
#	  upper_bounds       4     9				#s1,#s4,#s5,#s6,#s7
#	  descriptors      'y1'   'y2'				#s1,#s4,#s5,#s6,#s7
#	discrete_design_range = 2				#s10,#s13,#s14,#s15,#s16,#s18
#	  initial_point      2     2				#s10,#s13,#s14,#s15,#s16,#s18
#	  lower_bounds       1     1				#s10,#s13,#s14,#s15,#s16,#s18
#	  upper_bounds       4     9				#s10,#s13,#s14,#s15,#s16,#s18
#	  descriptors      'y1'   'y2'				#s10,#s13,#s14,#s15,#s16,#s18
#       discrete_design_set					#s2,#s3,#s4,#s5,#s6,#s7
#         real = 2						#s2,#s4,#s5,#s6,#s7
#           elements_per_variable = 4 5				#s2,#s4,#s5,#s6,#s7
#           elements = 1.2 2.3 3.4 4.5 1.2 3.3 4.4 5.5 7.7	#s2,#s4,#s5,#s6,#s7
#           descriptors      'y3'   'y4' 	       	       	#s2,#s4,#s5,#s6,#s7
#       discrete_design_set					#s11,#s12,#s13,#s14,#s15,#s16,#s18
#         real = 2						#s11,#s13,#s14,#s15,#s16,#s18
#           elements_per_variable = 4 5				#s11,#s13,#s14,#s15,#s16,#s18
#           elements = 1.2 2.3 3.4 4.5 1.2 3.3 4.4 5.5 7.7	#s11,#s13,#s14,#s15,#s16,#s18
#           descriptors      'y3'   'y4' 	       	       	#s11,#s13,#s14,#s15,#s16,#s18
#	    categorical 'yes' 'yes' 				#s6,#s7,#s15,#s16,#s18
#	    adjacency_matrix 1 1 0 0				#s6,#s7,#s15,#s16,#s18
#	    	      	     1 1 1 0   				#s6,#s7,#s15,#s16,#s18
#		      	     0 1 1 1				#s6,#s7,#s15,#s16,#s18
#		      	     0 0 1 1				#s6,#s7,#s15,#s16,#s18
#		      	     1 0 1 0 1				#s6,#s7,#s15,#s16,#s18
#		      	     0 1 0 1 0				#s6,#s7,#s15,#s16,#s18
#		      	     1 0 1 0 1				#s6,#s7,#s15,#s16,#s18
#		      	     0 1 0 1 0				#s6,#s7,#s15,#s16,#s18
#		      	     1 0 1 0 1				#s6,#s7,#s15,#s16,#s18
#         integer = 2						#s3,#s4,#s5,#s7
#           elements_per_variable = 2 2	  			#s3,#s4,#s5,#s7
#           elements = 4 7 8 9					#s3,#s4,#s5,#s7
#           descriptors      'z1'   'z2'			#s3,#s4,#s5,#s7
#	    categorical 'yes' 'yes' 				#s7
#         integer = 2						#s12,#s13,#s14,#s16,#s18
#           elements_per_variable = 2 2	  			#s12,#s13,#s14,#s16,#s18
#           elements = 4 7 8 9					#s12,#s13,#s14,#s16,#s18
#           descriptors      'z1'   'z2'			#s12,#s13,#s14,#s16,#s18
#	    categorical 'yes' 'yes' 				#s16,#s18
#       discrete_design_set string = 1			#s8,#s17
#	    elements = 'aniso1' 'aniso2' 'iso1' 'iso2' 'iso3'  	#s8,#s17
#           descriptors = 'ancomp'    				#s8,#s17
#	    adjacency_matrix 1 1 0 0 0				#s8,#s17
#	    	      	     1 1 0 0 0				#s8,#s17
#                     	     0 0 1 1 1				#s8,#s17
#                     	     0 0 1 1 1				#s8,#s17
#                     	     0 0 1 1 1				#s8,#s17

#method,		       	     				#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,
#	id_method = 'SAMPLING'					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	model_pointer = 'TRUTH'					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	sampling      						#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	  seed = 12345						#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	  samples = 55						#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16

#model,	  	    						#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	id_model = 'TRUTH'					#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	single	   						#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#	  interface_pointer = 'TRUE_FN'				#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16

interface,
#	id_interface = 'TRUE_FN'				#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
       direct							#s0,#s2,#s3,#s4,#s5,#s6,#s7,#s18
#       direct							#s9,#s11,#s12,#s13,#s14,#s15,#s16
#	fork asynch evaluation_concurrency 4			#s1,#s8,#s10,#s17
	  analysis_driver = 'text_book'	   			#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s18
#	  analysis_driver = 'text_book'	   			#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16
#          analysis_driver = 'gerstner_string'			#s8,#s17
#          parameters_file = 'params.in'			#s8,#s17
#          results_file = 'results.out'				#s8,#s17
#          file_tag	  					#s8,#s17

responses,
	objective_functions = 1
#	nonlinear_inequality_constraints = 2			#s1,#s3,#s4,#s6,#s7
#	nonlinear_inequality_constraints = 2			#s10,#s12,#s13,#s15,#s16
#	nonlinear_inequality_constraints = 1			#s18
#	nonlinear_equality_constraints = 1				#s18
	no_gradients
	no_hessians
