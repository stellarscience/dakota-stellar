#@ TODO REVIEW: Do the reliability methods also need NPSOL?
#@ *: DakotaConfig=HAVE_DOT
#@ s8: TimeoutAbsolute=2100
#@ s11: TimeoutAbsolute=2100

# DAKOTA Input File: dakota_rbdo_short_column_trsb2.in
# Optimization under uncertainty using reliability methods within a
# trust-region surrogate-based RBDO approach.  The RBDO problem is the
# "short_column" problem from Kuschel and Rackwitz, 1997.  The
# published soln is (b,h) = (8.668, 25.0) with f = 216.7

environment,
	method_pointer = 'SBLO'

method,
	id_method = 'SBLO'
	surrogate_based_local
	model_pointer = 'OPTIM_M'
	  approx_method_pointer = 'OPTIM'
	  soft_convergence_limit = 6
	  trust_region
	    initial_size = 0.2
	    contraction_factor = 0.5
	    expansion_factor   = 1.50
	  output verbose

###########################
# begin opt specification #
###########################
method,
	id_method = 'OPTIM'
	dot_sqp
#	npsol_sqp
	  convergence_tolerance = 1.e-8

model,
	id_model = 'OPTIM_M'
	surrogate local taylor_series
	  variables_pointer = 'OPTIM_V'
	  responses_pointer = 'OPTIM_R_SURR'
	  actual_model_pointer = 'OPTIM_TRUTH'

variables,
	id_variables = 'OPTIM_V'
	continuous_design = 2
	  initial_point    10.    15.
	  lower_bounds      5.    15.
	  upper_bounds     15.    25.
	  descriptors      'b'    'h'

responses,
# minimize b*h
# s.t.     p    <= .00621  Cases 0,1
# s.t.     beta >= 2.5     Cases 2,3
# s.t.     z    >= 0.      Cases 4,5,6,7
# NOTE: This specifies the TOTAL RESPONSE for the optimization,
#       as computed _from_ the surrogate model.
	id_responses = 'OPTIM_R_SURR'
	objective_functions = 1
	nonlinear_inequality_constraints = 1
	nonlinear_inequality_upper_bounds = .00621 #s0,#s1,#s2
#	nonlinear_inequality_lower_bounds = 2.5	   #s3,#s4,#s5
#	nonlinear_inequality_lower_bounds = 0.     #s6,#s7,#s8,#s9,#s10,#s11
#	nonlinear_inequality_upper_bounds = 1.e+50 #s3,#s4,#s5,#s6,#s7,#s8,#s9,#s10,#s11
	analytic_gradients
	no_hessians

##########################
# begin TS specification #
##########################

model,
	id_model = 'OPTIM_TRUTH'
	nested
	  variables_pointer  = 'OPTIM_V'
	  sub_method_pointer = 'UQ'
	  responses_pointer  = 'OPTIM_R_TRUTH'
	  primary_response_mapping   = 1. 0. 0. 0. 0.
	  secondary_response_mapping = 0. 0. 0. 0. 1.

responses,
# NOTE: This specifies the TOTAL RESPONSE from the nested mapping
#       used for constructing the surrogate.
	id_responses = 'OPTIM_R_TRUTH'
	objective_functions = 1
	nonlinear_inequality_constraints = 1
	analytic_gradients
	quasi_hessians sr1

##########################
# begin UQ specification #
##########################
method,
	id_method = 'UQ'
	model_pointer = 'UQ_M'
	local_reliability #nip
	  mpp_search x_taylor_mpp		#s0,#s3,#s6,#s9
#	  mpp_search u_taylor_mpp		#s1,#s4,#s7,#s10
#	  mpp_search no_approx			#s2,#s5,#s8,#s11
	  num_response_levels = 0 1		#s0,#s1,#s2,#s3,#s4,#s5
	  response_levels = 0.0			#s0,#s1,#s2,#s3,#s4,#s5
#	  compute gen_reliabilities		#s3,#s4,#s5
	  integration second_order
#	  num_probability_levels = 0 1		#s6,#s7,#s8
#	  probability_levels = .00621		#s6,#s7,#s8
#	  num_gen_reliability_levels = 0 1	#s9,#s10,#s11
#	  gen_reliability_levels = 2.5		#s9,#s10,#s11
	  cumulative distribution

model,
	id_model = 'UQ_M'
	single
	  variables_pointer = 'UQ_V'
	  interface_pointer = 'UQ_I'
	  responses_pointer = 'UQ_R'

variables,
	id_variables = 'UQ_V'
	continuous_design = 2
	normal_uncertain = 2
	  means              =  500.0   2000.0
	  std_deviations     =  100.0    400.0
	  descriptors        =   'P'      'M'
	lognormal_uncertain = 1
       	  means             =  5.0
	  std_deviations    =  0.5
	  descriptors       =  'Y'
	uncertain_correlation_matrix =  1   0.5 0
					0.5 1   0
					0   0   1

interface,
	id_interface = 'UQ_I'
	direct
	  analysis_driver = 'short_column'

responses,
	id_responses = 'UQ_R'
	response_functions = 2
	analytic_gradients
	analytic_hessians
