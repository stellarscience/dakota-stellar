#@ TODO REVIEW: Do the reliability methods also need NPSOL?
#@ *: DakotaConfig=HAVE_DOT
# DAKOTA Input File: dakota_rbdo_short_column.in
# Optimization under uncertainty using reliability methods within a
# simple (brute force) nested OUU environment.  The RBDO problem is the
# "short_column" problem from Kuschel and Rackwitz, 1997.

# In RBDO, you must specify both the response level and the probability
# level.  Therefore, you can formulate using either the RIA or PMA
# formulation.
# Cases 0-5:   RBDO in the z->p RIA formulation with a design constraint on p*.
#              RIA maps the response level z = 0. to a cumulative probability
#              level, and this probability level is constrained in the RBDO
#              optimization to be <= .00621.
# Cases 6-11:  RBDO in the z->beta RIA formulation with a design constraint on
#              beta*.  RIA maps the response level z = 0. to a cumulative
#              reliability level, and this reliability level is constrained in
#              the RBDO optimization to be >= 2.5.
# Cases 12-17: RBDO in the p->z PMA formulation with a design constraint on z*.
#              PMA maps the cumulative probability level p = 0.00621 to a
#              response level, and this response level is constrained in the
#              RBDO optimization to be >= 0.
# Cases 18-23: RBDO in the beta->z PMA formulation with a design constraint on
#              z*.  PMA maps the cumulative reliability level beta = 2.5 to a
#              response level, and this response level is constrained in the
#              RBDO optimization to be >= 0.
# The published soln for all cases is (b,h) = (8.668, 25.0) with f = 216.7

environment,
	  method_pointer = 'OPTIM'

###########################
# begin opt specification #
###########################
method,
	id_method = 'OPTIM'
	model_pointer = 'OPTIM_M'
#	optpp_q_newton
	dot_sqp
	  convergence_tolerance = 1.e-8
	scaling

model,
	id_model = 'OPTIM_M'
	nested
	  variables_pointer  = 'OPTIM_V'
	  sub_method_pointer = 'UQ'
	  responses_pointer  = 'OPTIM_R'
	  primary_response_mapping   = 1. 0. 0. 0. 0.
	  secondary_response_mapping = 0. 0. 0. 0. 1.

variables,
	id_variables = 'OPTIM_V'
	continuous_design = 2
	  initial_point    10.    15.
	  lower_bounds      5.    15.
	  upper_bounds     15.    25.
	  descriptors      'b'    'h'
	scale_type 'auto'

responses,
# minimize b*h
# s.t.     p    <= .00621 Cases 0-5
# s.t.     beta >= 2.5    Cases 6-11
# s.t.     z    >= 0.     Cases 12-23
# NOTE: This specifies the TOTAL RESPONSE for the optimization,
#       which is a combination of nested & interface responses.
	id_responses = 'OPTIM_R'
	objective_functions = 1
	nonlinear_inequality_constraints = 1
	nonlinear_inequality_upper_bounds = .00621 #s0,#s1,#s2,#s3,#s4,#s5
#	nonlinear_inequality_lower_bounds = 2.5	   #s6,#s7,#s8,#s9,#s10,#s11
#	nonlinear_inequality_lower_bounds = 0.     #s12,#s13,#s14,#s15,#s16,#s17,#s18,#s19,#s20,#s21,#s22,#s23
#	nonlinear_inequality_upper_bounds = 1.e+50 #s6,#s7,#s8,#s9,#s10,#s11,#s12,#s13,#s14,#s15,#s16,#s17,#s18,#s19,#s20,#s21,#s22,#s23
	numerical_gradients
	  method_source dakota
	  interval_type central
	  fd_gradient_step_size = 1.e-3
	no_hessians

##########################
# begin UQ specification #
##########################
method,
	id_method = 'UQ'
	model_pointer = 'UQ_M'
	local_reliability
#	  mpp_search x_taylor_mean		#s1,#s7,#s13,#s19
#	  mpp_search u_taylor_mean		#s2,#s8,#s14,#s20
#	  mpp_search x_taylor_mpp		#s3,#s9,#s15,#s21
#	  mpp_search u_taylor_mpp		#s4,#s10,#s16,#s22
#	  mpp_search no_approx			#s5,#s11,#s17,#s23
	  num_response_levels = 0 1	#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s9,#s10,#s11
	  response_levels = 0.0		#s0,#s1,#s2,#s3,#s4,#s5,#s6,#s7,#s8,#s9,#s10,#s11
#	  compute reliabilities			#s6,#s7,#s8,#s9,#s10,#s11
#	  num_probability_levels = 0 1		#s12,#s13,#s14,#s15,#s16,#s17
#	  probability_levels = .00621		#s12,#s13,#s14,#s15,#s16,#s17
#	  num_reliability_levels = 0 1		#s18,#s19,#s20,#s21,#s22,#s23
#	  reliability_levels = 2.5		#s18,#s19,#s20,#s21,#s22,#s23
	  cumulative distribution

model,
	id_model = 'UQ_M'
	single
	  variables_pointer = 'UQ_V'
	  interface_pointer = 'UQ_I'
	  responses_pointer = 'UQ_R'

variables,
	id_variables = 'UQ_V'
	continuous_design = 2
	normal_uncertain = 2
	  means              =  500.0   2000.0
	  std_deviations     =  100.0    400.0
	  descriptors        =   'P'      'M'
	lognormal_uncertain = 1
       	  means             =  5.0
	  std_deviations    =  0.5
	  descriptors       =  'Y'
	uncertain_correlation_matrix =  1   0.5 0
					0.5 1   0
					0   0   1

interface,
	id_interface = 'UQ_I'
	direct
	  analysis_driver = 'short_column'

responses,
	id_responses = 'UQ_R'
	response_functions = 2
	analytic_gradients
#	numerical_gradients
#	  method_source dakota
#	  interval_type central
#	  fd_gradient_step_size = 1.e-4
	no_hessians
