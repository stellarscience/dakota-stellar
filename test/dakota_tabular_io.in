#@ s*: Label=FastTest
#@ s0: ExecArgs='-pre_run ::dakota_tabular_io.0.dat -run -post_run'
#@ s0: CheckOutput='dakota.0.log'
#@ s2: ExecArgs='-post_run dakota_tabular_io.1.dat::'
#@ s3: ExecArgs='-output dakota.3.log' CheckOutput='dakota.3.log'
#@ s9: CheckOutput='dakota.9.log'

# Test tabular output/input for annotated file formats
# (adapted from dakota_uq_textbook_lhs_approx.in)
# Also test command-line vs. input file run modes and output control

# 0: LHS; generate tabular output using pre-run mode; must also run
#    -run and -post_run so output is generated for test diffing

# 1: Import the pre-run data for a list parameter study, since list
#    import can't have responses in the data; dakota_tabular_io.1.dat
#    will have response columns; should be same output as 3

# 2: Import list parameter study output using post run 

# 3: LHS; generate tabular output to dakota_tabular_io.3.dat

# 4: LHS on surrogate; import data from 3, build an interpolating
#    surrogate, and do LHS at same points used to build

# 5--9: Tests 0--4 with Dakota various tabular formats, including 6.0
#   5 --> 6 freeform (no annotation)
#   6 --> 7 eval_id header (Dakota 6.0 format)
#   8 --> 9 eval_id interface_id (headerless)

environment,
#	  tabular_data						#s1,#s2,#s3
#	  tabular_data						#s6,#s7,#s8
#	    tabular_data_file = 'dakota_tabular_io.1.dat'  	#s1
#	    tabular_data_file = 'dakota_tabular_io.3.dat'  	#s3
#	    tabular_data_file = 'dakota_tabular_io.6.dat'  	#s6
#	      custom_annotated eval_id header			#s6
#	    tabular_data_file = 'dakota_tabular_io.8.dat'  	#s8
#	      custom_annotated eval_id interface_id		#s8
    output_file = 'dakota.0.log'                      #s0
#   output_file = 'dakota.9.log'                      #s9
#	  method_pointer = 'UQ'					#s4,#s9
#	  pre_run						#s5
#	    output 'dakota_tabular_io.5.dat'			#s5
#	    freeform						#s5	    
#	  run  post_run	 					#s5
#	  post_run input 'dakota_tabular_io.6.dat'		#s7
#	    custom_annotated eval_id header			#s7

#########################################
# interface truth model and dace method #
#########################################

method,					#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9
	id_method = 'DACE'		#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9
	model_pointer = 'DACE_M'	#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9
	sampling			#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9
	  samples = 25			#s0,#s2,#s3,#s5,#s7,#s8
## No additional samples beyond those read	#s4,#s9
#	  samples = 0				#s4,#s9
	  seed = 50			#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9
	  sample_type lhs		#s0,#s2,#s3,#s4,#s5,#s7,#s8,#s9

#method,							#s1,#s6
#	list_parameter_study					#s1,#s6
#	  import_points_file = 'dakota_tabular_io.0.dat'	#s1
#	  import_points_file = 'dakota_tabular_io.5.dat'	#s6
#	    freeform						#s6

#method,  		   					#s4,#s9
#	id_method = 'UQ'					#s4,#s9
#	model_pointer = 'UQ_M'					#s4,#s9
#	sampling						#s4,#s9
#	  samples = 25 						#s4,#s9
#	  seed = 50						#s4,#s9
#	  sample_type lhs					#s4,#s9
#								#s4,#s9
#model,								#s4,#s9
#	id_model = 'UQ_M'					#s4,#s9
#	surrogate global					#s4,#s9
#	  dace_method_pointer = 'DACE'				#s4,#s9
# 	  gaussian_process surfpack				  #s4,#s9
#	  import_build_points_file = 'dakota_tabular_io.3.dat'	#s4
#	  import_build_points_file = 'dakota_tabular_io.8.dat'	#s9
#	    custom_annotated eval_id interface_id		#s9

model,
	id_model = 'DACE_M'
	single
	  interface_pointer = 'I1'

variables,
#	active all
	lognormal_uncertain =  2			
	  means             =  1.0  1.0			
	  error_factors     =  1.1  1.1			
	  descriptors       =  'TF1ln' 'TF2ln'		
	discrete_uncertain_set integer = 1			
	  set_probs  = .1 .2 .4 .2 .1				
	  set_values =  1  2  3  4  5				
	  descriptors = 'ModelForm'				
	histogram_point_uncertain real = 2			
	  num_pairs 7 7		  				
	  abscissas 0.200 2.166 4.133 6.100 8.067 10.033 12.000	
	            0.200 2.166 4.133 6.100 8.067 10.033 12.000	
	  counts    1     1     1     1     1     1      1	
	            1     1     1     1     1     1      1	
	  descriptors = 'hpu_r1' 'hpu_r2'

interface,
	id_interface = 'I1'
	direct
	  analysis_driver = 'text_book'


responses,
	response_functions = 1
	  descriptors 'text_book'
	no_gradients
	no_hessians
