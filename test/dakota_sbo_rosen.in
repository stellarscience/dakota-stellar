#@ s0: UserMan=rosen_opt_sbo
# DAKOTA INPUT FILE - dakota_sbo_rosen.in
# Dakota Input File: rosen_opt_sbo.in         #s0

# Surrogate-based optimization to minimize Rosenbrock's function.

# Note on testing in this file:
# These tests exercise the various surrogate model types that are
# available in the surrogate based optimization environment. Here, the
# options are "polynomial," "neural network," "mars,"
# "gaussian_process surfpack (kriging)," and "taylor_series". See the
# DAKOTA Users Manual for a description of these surrogate model
# types.

environment
  tabular_data
    tabular_data_file = 'rosen_opt_sbo.dat'   #s0
  top_method_pointer = 'SBLO'

method
  id_method = 'SBLO'
  surrogate_based_local
    model_pointer = 'SURROGATE'
    method_pointer = 'NLP'
    max_iterations = 500
#	soft_convergence_limit = 10
###############################################
# the trust region (TR) commands specify the
# size of the first trust region, plus the
# scaling factors that are applied to the TR
# on subsequent interations
###############################################
  trust_region
    initial_size = 0.10
    minimum_size = 1.0e-6
    contract_threshold = 0.25
    expand_threshold   = 0.75
    contraction_factor = 0.50
    expansion_factor   = 1.50

###############################################
# begin opt specification
###############################################
method
  id_method = 'NLP'
# output verbose
  conmin_frcg
#	optpp_q_newton
#	npsol_sqp
#	dot_bfgs
#	dot_frcg
    max_iterations = 50
    convergence_tolerance = 1e-8

model
  id_model = 'SURROGATE'
  surrogate global                      #s0,#s1,#s2,#s3,#s4,#s7,#s8,#s9,#s10,#s11
#	  reuse_samples region
#	  use_derivatives			#s10,#s11
    correction additive zeroth_order 		#s0,#s1,#s2,#s3,#s4,#s7,#s8,#s9,#s10,#s11
### Section to specify surface fit method.
    polynomial quadratic                #s0
#	  neural_network			                #s1
#	    nodes = 10  # to get historical behavior on test 1
#	  gaussian_process surfpack		        #s2,#s3,#s9,#s10,#s11
#	   correlation_lengths 0.79 0.76	    #s3
#	  mars                                #s4
#	  moving_least_squares			          #s7
#	  radial_basis				                #s8
# 	surrogate local taylor_series		    #s5,#s6
    dace_method_pointer = 'SAMPLING'		#s0,#s1,#s2,#s3,#s4,#s7,#s8,#s9,#s10,#s11
#	  actual_model_pointer = 'TRUTH' 	    #s5,#s6
  responses_pointer = 'SURROGATE_RESP'

variables
  continuous_design = 2
    initial_point   -1.2  1.0
    lower_bounds    -2.0 -2.0
    upper_bounds     2.0  2.0
    descriptors      'x1' 'x2'

responses
  id_responses = 'SURROGATE_RESP'
  objective_functions = 1
#  analytic_gradients               #s3,#s7,#s8,#s9,#s10,#s11
  numerical_gradients               #s0,#s1,#s2,#s4,#s5,#s6
    method_source dakota		        #s0,#s1,#s2,#s4,#s5,#s6
    interval_type central		        #s0,#s1,#s2,#s4,#s5,#s6
    fd_step_size = 1.e-6	          #s0,#s1,#s2,#s4,#s5,#s6
  no_hessians

###############################################
# Sampling method specifications for sampling in
# the trust regions of the SBO environment
###############################################
method
  id_method = 'SAMPLING'
#	dace box_behnken
#	dace central_composite
#	dace oas #seed = 5
#	  samples = 49 symbols = 7
#	dace lhs #seed = 5
#	  samples = 10 symbols = 10
# To switch from the LHS code (used in the
# sampling method) to DDACE, comment out
# the four lines below and comment out the two
# lines starting with 'dace lhs' above.
  sampling
    samples = 10          #s0,#s1,#s2,#s3,#s5,#s6,#s7,#s8,#s9,#s10
#	  samples = 30		      #s4
#	  samples =  5		      #s11
    seed = 531 
    sample_type lhs
    model_pointer = 'TRUTH'

model
  id_model = 'TRUTH'
  single
    interface_pointer = 'TRUE_FN'
    responses_pointer = 'TRUE_RESP'

interface
  id_interface = 'TRUE_FN'
  analysis_drivers = 'rosenbrock'
    direct
  deactivate evaluation_cache restart_file

responses
  id_responses = 'TRUE_RESP'
  objective_functions = 1
  no_gradients                      #s0,#s1,#s2,#s3,#s4,#s7,#s8,#s9
#  analytic_gradients               #s5,#s6,#s10,#s11
#  numerical_gradients
#    method_source dakota
#    interval_type central
#    fd_gradient_step_size = 1.e-6
  no_hessians                       #s0,#s1,#s2,#s3,#s4,#s5,#s7,#s8,#s9,#s10,#s11
#  analytic_hessians	#s6
